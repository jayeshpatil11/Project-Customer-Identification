{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a4be75a3-4be2-4f18-8605-e9739a876a56",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# ENHANCED VISUAL DASHBOARD - app.py\n",
    "\n",
    "\n",
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import plotly.express as px\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from model import load_and_preprocess, perform_kmeans, perform_agglomerative\n",
    "\n",
    "st.set_page_config(page_title=\"Customer Personality Dashboard\", layout=\"wide\", page_icon=\"📊\")\n",
    "\n",
    "st.title(\"📊 Customer Personality Insights Dashboard\")\n",
    "st.markdown(\"A simple, visual explanation of customer segments and behaviors — designed for non-technical audiences.\")\n",
    "\n",
    "\n",
    "# Load Data\n",
    "df = load_and_preprocess()\n",
    "\n",
    "\n",
    "# Run Models\n",
    "\n",
    "df_kmeans, kmeans_score = perform_kmeans(df)\n",
    "df_agglo = perform_agglomerative(df)\n",
    "\n",
    "\n",
    "# KPIs\n",
    "st.markdown(\"### 📈 Key Customer Highlights\")\n",
    "col1, col2, col3, col4 = st.columns(4)\n",
    "col1.metric(\"👥 Total Customers\", len(df))\n",
    "col2.metric(\"💰 Avg Income\", f\"${df['Income'].mean():,.0f}\")\n",
    "col3.metric(\"🛍️ Avg Spending\", f\"${df['Total_Spent'].mean():,.0f}\")\n",
    "col4.metric(\"📅 Avg Recency\", f\"{df['Recency'].mean():.0f} days since last purchase\")\n",
    "\n",
    "\n",
    "# Tabs for EDA & Clustering\n",
    "\n",
    "tab1, tab2, tab3, tab4 = st.tabs([\"🧾 Spending Patterns\", \"👨‍👩‍👧 Age & Income Insights\", \"🤖 K-Means Segments\", \"🌳 Agglomerative Segments\"])\n",
    "\n",
    "\n",
    "# TAB 1: Spending Patterns\n",
    "\n",
    "with tab1:\n",
    "    st.subheader(\"🛍️ Spending by Product Category\")\n",
    "\n",
    "    product_cols = ['MntWines','MntFruits','MntMeatProducts','MntFishProducts','MntSweetProducts','MntGoldProds']\n",
    "    product_spend = df[product_cols].sum().sort_values(ascending=False)\n",
    "\n",
    "    fig = px.bar(product_spend, x=product_spend.index, y=product_spend.values,\n",
    "                 color=product_spend.index, title=\"Which Products Customers Spend Most On\",\n",
    "                 labels={'x':'Product Category','y':'Total Spent ($)'})\n",
    "    st.plotly_chart(fig, use_container_width=True)\n",
    "\n",
    "    st.markdown(\"\"\"\n",
    "    **Insight:** Customers spend most on wines and meat products — suggesting premium preferences.  \n",
    "    Marketing efforts could focus on bundled offers in these categories.\n",
    "    \"\"\")\n",
    "\n",
    "\n",
    "# TAB 2: Age & Income Insights\n",
    "\n",
    "with tab2:\n",
    "    st.subheader(\"👨‍👩‍👧 Age & Income Relationship to Spending\")\n",
    "\n",
    "    # 1️⃣ Age Group Analysis\n",
    "    df['Age_Group'] = pd.cut(df['Age'], bins=[18,30,45,60,80], labels=['18-30','31-45','46-60','60+'])\n",
    "    age_spend = df.groupby('Age_Group')['Total_Spent'].mean().reset_index()\n",
    "\n",
    "    fig = px.bar(age_spend, x='Age_Group', y='Total_Spent', color='Age_Group',\n",
    "                 title=\"Average Spending by Age Group\", text_auto=True)\n",
    "    st.plotly_chart(fig, use_container_width=True)\n",
    "    st.markdown(\"**Insight:** Middle-aged customers (31–60) spend significantly more than younger or older ones.\")\n",
    "\n",
    "    # 2️⃣ Income vs Spending (Bubble Chart)\n",
    "    fig = px.scatter(df, x='Income', y='Total_Spent', size='Total_Spent', color='Education',\n",
    "                     hover_data=['Marital_Status'], title=\"Income vs Spending Behavior (Bubble Size = Total Spend)\")\n",
    "    st.plotly_chart(fig, use_container_width=True)\n",
    "    st.markdown(\"**Insight:** Higher income customers naturally spend more, but education level also plays a key role in total spending.\")\n",
    "\n",
    "\n",
    "# TAB 3: K-Means Clustering Insights\n",
    "\n",
    "with tab3:\n",
    "    st.subheader(\"🤖 Customer Segments (K-Means Clustering)\")\n",
    "    st.write(f\"**Silhouette Score:** {kmeans_score:.3f} — indicates how well-defined the clusters are.\")\n",
    "\n",
    "    fig = px.scatter(df_kmeans, x='Income', y='Total_Spent', color='Cluster',\n",
    "                     title=\"K-Means Segmentation: Income vs Spending\",\n",
    "                     color_continuous_scale='Viridis', hover_data=['Age','Education'])\n",
    "    st.plotly_chart(fig, use_container_width=True)\n",
    "\n",
    "    cluster_sizes = df_kmeans['Cluster'].value_counts().reset_index()\n",
    "    fig = px.pie(cluster_sizes, names='index', values='Cluster', title=\"Customer Cluster Distribution (K-Means)\")\n",
    "    st.plotly_chart(fig, use_container_width=True)\n",
    "\n",
    "    st.markdown(\"\"\"\n",
    "    ### 🧭 Cluster Interpretations:\n",
    "    - **Cluster 0:** High-income, high-spending customers (Premium segment)  \n",
    "    - **Cluster 1:** Low-income, low-spending — price-sensitive customers  \n",
    "    - **Cluster 2:** Moderate income & loyal repeat customers  \n",
    "    - **Cluster 3:** Younger customers with medium spending potential  \n",
    "    \"\"\")\n",
    "\n",
    "    st.download_button(\"💾 Download K-Means Results\", df_kmeans.to_csv(index=False).encode('utf-8'),\n",
    "                       file_name='kmeans_clusters.csv', mime='text/csv')\n",
    "\n",
    "# TAB 4: Agglomerative Clustering Insights\n",
    "with tab4:\n",
    "    st.subheader(\"🌳 Agglomerative Segmentation\")\n",
    "\n",
    "    fig = px.scatter(df_agglo, x='Income', y='Total_Spent', color='Agg_Cluster',\n",
    "                     title=\"Agglomerative Clustering: Income vs Spending\",\n",
    "                     color_continuous_scale='Plasma', hover_data=['Age','Marital_Status'])\n",
    "    st.plotly_chart(fig, use_container_width=True)\n",
    "\n",
    "    st.markdown(\"### 💡 Insights:\")\n",
    "    st.markdown(\"\"\"\n",
    "    - Agglomerative clustering groups customers with **similar spending and income behavior**.  \n",
    "    - Clusters here may overlap slightly but provide intuitive segmentation for marketing.\n",
    "    \"\"\")\n",
    "\n",
    "    st.download_button(\"💾 Download Agglomerative Results\", df_agglo.to_csv(index=False).encode('utf-8'),\n",
    "                       file_name='agglo_clusters.csv', mime='text/csv')\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
